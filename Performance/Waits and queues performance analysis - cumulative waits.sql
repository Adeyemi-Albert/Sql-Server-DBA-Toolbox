WITH    Waits
          AS ( SELECT   wait_type,
                        wait_time_ms / 1000.0 AS WaitS,
                        ( wait_time_ms - signal_wait_time_ms ) / 1000.0 AS ResourceS,
                        signal_wait_time_ms / 1000.0 AS SignalS,
                        waiting_tasks_count AS WaitCount,
                        100.0 * wait_time_ms / SUM(wait_time_ms) OVER ( ) AS Percentage,
                        ROW_NUMBER() OVER ( ORDER BY wait_time_ms DESC ) AS RowNum
               FROM     sys.dm_os_wait_stats
               WHERE    wait_type NOT IN ( 'BROKER_EVENTHANDLER',
                                           'BROKER_RECEIVE_WAITFOR',
                                           'BROKER_TASK_STOP',
                                           'BROKER_TO_FLUSH',
                                           'BROKER_TRANSMITTER',
                                           'CHECKPOINT_QUEUE',
                                           'CLR_AUTO_EVENT',
                                           'CLR_MANUAL_EVENT',
										   'CLR_SEMAPHORE',
                                           'DBMIRROR_EVENTS_QUEUE',
                                           'DBMIRRORING_CMD',
                                           'DIRTY_PAGE_POLL',
                                           'DISPATCHER_QUEUE_SEMAPHORE',
                                           'FT_IFTS_SCHEDULER_IDLE_WAIT',
                                           'FT_IFTSHC_MUTEX',
                                           'HADR_FILESTREAM_IOMGR_IOCOMPLETION',
                                           'LAZYWRITER_SLEEP',
										   'LOGMGR_QUEUE',
                                           'ONDEMAND_TASK_QUEUE',
                                           'REQUEST_FOR_DEADLOCK_SEARCH',
                                           'RESOURCE_QUEUE',
                                           'SLEEP_BPOOL_FLUSH',
                                           'SLEEP_SYSTEMTASK',
										   'SLEEP_TASK',
                                           'SP_SERVER_DIAGNOSTICS_SLEEP',
                                           'SQLTRACE_BUFFER_FLUSH',
                                           'SQLTRACE_INCREMENTAL_FLUSH_SLEEP',
                                           'SQLTRACE_LOCK',
                                           'SQLTRACE_WAIT_ENTRIES',
                                           'TRACEWRITE',
										   'WAITFOR',
                                           'XE_DISPATCHER_JOIN',
                                           'XE_DISPATCHER_WAIT',
                                           'XE_TIMER_EVENT' )
             )
    SELECT  GETDATE() AS CurrDateTime,
            W1.wait_type AS WaitType,
            CAST (W1.WaitS AS DECIMAL(14, 2)) AS Wait_S,
            CAST (W1.ResourceS AS DECIMAL(14, 2)) AS Resource_S,
            CAST (W1.SignalS AS DECIMAL(14, 2)) AS Signal_S,
            W1.WaitCount AS WaitCount,
            CAST (W1.Percentage AS DECIMAL(4, 2)) AS Percentage,
            CAST (( W1.WaitS / W1.WaitCount ) AS DECIMAL(14, 4)) AS AvgWait_S,
            CAST (( W1.ResourceS / W1.WaitCount ) AS DECIMAL(14, 4)) AS AvgRes_S,
            CAST (( W1.SignalS / W1.WaitCount ) AS DECIMAL(14, 4)) AS AvgSig_S
    FROM    Waits AS W1
            INNER JOIN Waits AS W2 ON W2.RowNum <= W1.RowNum
    GROUP BY W1.RowNum,
            W1.wait_type,
            W1.WaitS,
            W1.ResourceS,
            W1.SignalS,
            W1.WaitCount,
            W1.Percentage
    HAVING  SUM(W2.Percentage) - W1.Percentage < 95 -- percentage threshold
    ORDER BY W1.Percentage DESC;
GO
